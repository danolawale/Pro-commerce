# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\ThirdParty\Shopify\Api\ShopifyClient:
        arguments:
            $client: '@shopify.client'
    App\ThirdParty\AbstractClient\Api\CustomHttpClientInterface $shopifyClient: '@App\ThirdParty\Shopify\Api\ShopifyClient'

    App\State\UserPasswordHasherStateProcessor:
        arguments:
            $persistProcessor: '@api_platform.doctrine.orm.state.persist_processor'
            $removeProcessor: '@api_platform.doctrine.orm.state.remove_processor'
        tags: ['api_platform.state_processor']

    App\ThirdParty\Shopify\Api\Product\Validation\GetProductResponseConstraint: ~

    app.third-party.shopify.api.product.validation.get-product-response-constraint-validator:
        class: App\ThirdParty\AbstractClient\Api\Validation\ResponseValidator
        arguments:
          $validator: '@Symfony\Component\Validator\Validator\ValidatorInterface'
          $constraint: '@App\ThirdParty\Shopify\Api\Product\Validation\GetProductResponseConstraint'

    App\ThirdParty\AbstractClient\Api\Validation\ResponseValidatorInterface $getProductResponseValidator: '@app.third-party.shopify.api.product.validation.get-product-response-constraint-validator'

    App\QueryBuilder\QueryExecutionService: ~
    App\QueryBuilder\QueryExecutionServiceInterface: '@App\QueryBuilder\QueryExecutionService'

    App\Component\Import\Product\Query\Builders\ProductQueryBuilder:
        tags:
            - { name: product.query.builder, priority: 100 }

    App\Component\Import\Product\Query\Builders\ProductVariantQueryBuilder:
        tags:
            - { name: product.query.builder, priority: 80 }

    App\Component\Import\Product\Query\Builders\ProductOptionQueryBuilder:
        tags:
            - { name: product.query.builder, priority: 60 }

    App\Component\Import\Product\Query\Builders\ProductImageQueryBuilder:
        tags:
            - { name: product.query.builder, priority: 40 }

    App\Component\Import\Product\Query\ProductImportQueryRunner:
        arguments:
            $queryBuilders: !tagged_iterator { tag: product.query.builder }
            $queryExecutionService: '@App\QueryBuilder\QueryExecutionService'

    App\Component\Import\Product\Query\ProductImportQueryRunnerInterface $productImportQueryRunner: '@App\Component\Import\Product\Query\ProductImportQueryRunner'
